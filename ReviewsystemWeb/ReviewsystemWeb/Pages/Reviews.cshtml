@page
@model ReviewsystemWeb.Pages.ReviewsModel
@{
    Layout = "_Layout";
}

<!-- Logout Button -->
<button type="button" class="btn btn-light btn-custom logout-btn" onclick="window.location='/LogoutPage';">
    Logout
</button>

<!-- Section 1: Charts with a Light Background -->
<div class="section section-charts">
    <h2 class="mb-4">Review Analytics</h2>

    <div class="row">
        <!-- FIRST CHART (Bar) -->
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Rating Distribution</h5>
                </div>
                <div class="card-body">
                    <canvas id="distributionChart" width="100%" height="100"></canvas>
                </div>
            </div>
        </div>

        <!-- SECOND CHART (Line) -->
        <div class="col-md-6 mb-4">
            <div class="card shadow">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0">Monthly Average Rating</h5>
                </div>
                <div class="card-body">
                    <canvas id="monthlyChart" width="100%" height="100"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Section 2: Table with a Dark Background -->
<div class="section section-table">
    <h3 class="mt-5 mb-3 text-white">All Reviews</h3>

    @if (Model.AllReviews is { Count: > 0 })
    {
        <table class="table table-striped table-hover table-dark">
            <thead class="table-light">
                <tr>
                    <th>Review ID</th>
                    <th>Rating</th>
                    <th>Created At</th>
                    <th>Questions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var review in Model.AllReviews)
                {
                    <tr>
                        <td>@review.ReviewId</td>
                        <td>@review.Rating</td>
                        <td>@review.CreatedAt.ToString("g")</td>
                        <td>
                            @if (review.Questions != null && review.Questions.Count > 0)
                            {
                                <ul class="mb-0">
                                    @foreach (var q in review.Questions)
                                    {
                                        <li>
                                            <strong>Q#@q.QuestionId:</strong> @q.QuestionText
                                            <br />
                                            <em>Response:</em> @q.ResponseText
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                @("No questions.")
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-white">No reviews found or you may not be authorized.</p>
    }
</div>

<!-- Load Chart.js from CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Chart Scripts -->
<script>
    // Chart 1: Bar
    var ratingDistribution = @Json.Serialize(Model.RatingDistribution);
    var distLabels = ratingDistribution.map(x => x.rating);
    var distCounts = ratingDistribution.map(x => x.count);

    var ctx1 = document.getElementById('distributionChart').getContext('2d');
    var distributionChart = new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: distLabels,
            datasets: [{
                label: 'Number of Reviews by Rating',
                data: distCounts,
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Chart 2: Line
    var monthlyData = @Json.Serialize(Model.MonthlyAverages);
    var monthLabels = monthlyData.map(m => m.label);
    var avgRatings = monthlyData.map(m => m.averageRating);

    var ctx2 = document.getElementById('monthlyChart').getContext('2d');
    var monthlyChart = new Chart(ctx2, {
        type: 'line',
        data: {
            labels: monthLabels,
            datasets: [{
                label: 'Monthly Average Rating',
                data: avgRatings,
                fill: false,
                borderColor: 'rgba(255, 99, 132, 1)',
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderWidth: 2,
                tension: 0.1,
                pointRadius: 5,
                pointHoverRadius: 8
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    suggestedMin: 1,
                    suggestedMax: 5
                }
            }
        }
    });
</script>

<!-- Custom Styles -->
<style>
    body {
        background-image: url('../Images/main1.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
    }

    body {
        background-color: #f8f9fa;
    }


    /* Section for charts (light background) */
    .section-charts {
        background-color: #f8f9fa; /* Light gray */
        padding: 20px;
        border-bottom: 5px solid #dee2e6; /* Separator line */
    }

    /* Section for table (dark background) */
    .section-table {
        background-color: #343a40; /* Dark gray */
        padding: 20px;
        color: #ffffff; /* Text color for dark background */
    }

    .logout-btn {
        position: absolute;
        top: 20px;
        left: 20px;
        background-color: dimgray;
        color: #ffffff;
        font-size: 16px;
        font-weight: bold;
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }

        .logout-btn:hover {
            background-color: rgba(255, 0, 0, 0.8);
            transform: scale(1.05);
        }

        .logout-btn:focus {
            outline: none;
            box-shadow: 0px 0px 10px rgba(255, 0, 0, 0.6);
        }
</style>
